name: CI/CD for ECS Deployment

on:
  push:
    branches:
      - main # Trigger on push to the main branch
  workflow_dispatch: # Trigger manually via GitHub UI

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ vars.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push backend Docker image
        run: |
          cd ./server
          docker build -f Dockerfile -t backend-image .
          docker tag backend-image:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/backend-repository:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/backend-repository:latest

      - name: Build and push frontend Docker image
        run: |
          cd ./client
          docker build -f Dockerfile -t frontend-image .
          docker tag frontend-image:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend-repository:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend-repository:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Install Amazon ECS CLI
        run: |
          curl --location https://amazon-ecs-cli.s3.amazonaws.com/latest/linux/amd64/ecs-cli -o /usr/local/bin/ecs-cli
          sudo chmod +x /usr/local/bin/ecs-cli

      - name: Verify ECS CLI Installation
        run: ecs-cli --version

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy ECS Service
        run: |
          ecs-cli configure --cluster app-cluster --region $AWS_REGION --default-launch-type FARGATE
          ecs-cli compose --file docker-compose.yml service up
