name: CI/CD for ECS Deployment

on:
  push:
    branches:
      - main # Trigger on push to the main branch
  workflow_dispatch: # Trigger manually via GitHub UI

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ vars.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push backend Docker image
        id: build-backend-image
        run: |
          cd ./server
          docker build -f Dockerfile -t backend-image .
          docker tag backend-image:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/backend-repository:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/backend-repository:latest
          echo "backend_image=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/backend-repository:latest" >> $GITHUB_OUTPUT

      # - name: Build and push frontend Docker image
      #   run: |
      #     cd ./client
      #     docker build -f Dockerfile -t frontend-image .
      #     docker tag frontend-image:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend-repository:latest
      #     docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend-repository:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Debug Image URL
        run: |
          echo "Image URL: ${{ needs.build.steps.build-backend-image.outputs.backend_image }}"
          echo "Image URL: ${{ needs.build.outputs.backend_image }}"

      - name: Install Amazon ECS CLI V2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update

      - name: Verify ECS CLI Installation
        run: aws --version

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Download Task Definitions
        run: |
          aws ecs describe-task-definition --task-definition backend-task --query taskDefinition > backend-task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: backend-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: backend-task-definition.json
          container-name: backend
          image: ${{ needs.build.outputs.backend_image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.backend-task-def.outputs.task-definition }}
          service: backend-service
          cluster: app-cluster
          wait-for-service-stability: true
